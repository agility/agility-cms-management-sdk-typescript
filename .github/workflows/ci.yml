name: CI/CD Pipeline

on:
  pull_request:
    branches: [main, dev]
  push:
    branches: [main, dev]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Code quality, linting, and unit tests
  code-quality-and-unit-tests:
    name: Code Quality & Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: TypeScript type checking
        run: yarn type-check

      - name: ESLint code quality check
        run: yarn lint

      - name: Prettier format check
        run: yarn format:check

      - name: Run unit tests
        run: yarn test:unit
        env:
          AGILITY_PAT: ${{ secrets.AGILITY_PAT }}
          AGILITY_GUID: ${{ secrets.AGILITY_GUID }}
          AGILITY_WEBSITE: ${{ secrets.AGILITY_WEBSITE }}
          AGILITY_LOCALES: ${{ secrets.AGILITY_LOCALES }}
          AGILITY_BASE_URL: ${{ secrets.AGILITY_BASE_URL }}

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  # Integration tests (run separately for better visibility)
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [code-quality-and-unit-tests]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build project
        run: yarn build

      - name: Run integration tests
        run: yarn test:integration
        env:
          NODE_ENV: integration
          AGILITY_PAT: ${{ secrets.AGILITY_PAT }}
          AGILITY_GUID: ${{ secrets.AGILITY_GUID }}
          AGILITY_WEBSITE: ${{ secrets.AGILITY_WEBSITE }}
          AGILITY_LOCALES: ${{ secrets.AGILITY_LOCALES }}
          AGILITY_BASE_URL: ${{ secrets.AGILITY_BASE_URL }}

      - name: Upload integration test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: integration-test-results-${{ github.sha }}
          path: coverage/
          retention-days: 7

  # Security and dependency checks
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run security audit
        run: yarn audit --level moderate

      - name: Check for vulnerabilities
        run: npx audit-ci --moderate

  # Build and package
  build-package:
    name: Build Package
    runs-on: ubuntu-latest
    needs: [code-quality-and-unit-tests, security-audit]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Clean build
        run: yarn clean

      - name: Build package
        run: yarn build

      - name: Check build output
        run: |
          ls -la dist/
          node -e "console.log('Build check:', require('./dist/index.js'))"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ github.sha }}
          path: dist/
          retention-days: 7
